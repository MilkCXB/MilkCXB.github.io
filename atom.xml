<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>MilkBlog</title>
  
  <subtitle>欢迎来到我的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://milkblog.com/"/>
  <updated>2019-12-09T14:52:42.625Z</updated>
  <id>http://milkblog.com/</id>
  
  <author>
    <name>MilkCXB</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>��ӭ��λ�����ҵĲ���</title>
    <link href="http://milkblog.com/post/2019-12-09-wo/"/>
    <id>http://milkblog.com/post/2019-12-09-wo/</id>
    <published>2019-12-09T14:51:57.000Z</published>
    <updated>2019-12-09T14:52:42.625Z</updated>
    
    <content type="html"><![CDATA[<p>�������ҵĲ���</p><a id="more"></a><p>###��ӭ�����ҵĲ���</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;�������ҵĲ���&lt;/p&gt;
    
    </summary>
    
    
      <category term="����" scheme="http://milkblog.com/categories/%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD/"/>
    
    
      <category term="��������" scheme="http://milkblog.com/tags/%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD/"/>
    
  </entry>
  
  <entry>
    <title>router里的钩子函数</title>
    <link href="http://milkblog.com/post/2017-05-26-123/"/>
    <id>http://milkblog.com/post/2017-05-26-123/</id>
    <published>2017-05-26T04:12:57.000Z</published>
    <updated>2019-12-09T14:52:59.690Z</updated>
    
    <content type="html"><![CDATA[<p>router里会存在哪些钩子函数呢？</p><a id="more"></a> <p>##router里会存在哪些钩子函数呢？</p><h3 id="Vue-beforeEach-function-to-form-next-在跳转之前执行"><a href="#Vue-beforeEach-function-to-form-next-在跳转之前执行" class="headerlink" title="Vue.beforeEach(function(to,form,next){}) /在跳转之前执行/"></a>Vue.beforeEach(function(to,form,next){}) /<em>在跳转之前执行</em>/</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">router.beforeEach((to, from, next) &#x3D;&gt; &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    let token &#x3D; router.app.$storage.fetch(&quot;token&quot;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    let needAuth &#x3D; to.matched.some(item &#x3D;&gt; item.meta.login);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">    if(!token &amp;&amp; needAuth) return next(&#123;path: &quot;&#x2F;login&quot;&#125;);</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    next();</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr></table></figure><p>beforeEach函数有三个参数：<br>####to:router即将进入的路由对象</p><p>####from:当前导航即将离开的路由</p><p>####next:Function,进行管道中的一个钩子，如果执行完了，则导航的状态就是 confirmed （确认的）；否则为false，终止导航。</p><p>####afterEach函数不用传next()函数</p><h3 id="Vue-afterEach-function-to-form-在跳转之后判断"><a href="#Vue-afterEach-function-to-form-在跳转之后判断" class="headerlink" title="Vue.afterEach(function(to,form))/在跳转之后判断/"></a>Vue.afterEach(function(to,form))/<em>在跳转之后判断</em>/</h3><p>比bforeEach少个next函数</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;router里会存在哪些钩子函数呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="web前端" scheme="http://milkblog.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="vue-router" scheme="http://milkblog.com/tags/vue-router/"/>
    
  </entry>
  
  <entry>
    <title>j12321412</title>
    <link href="http://milkblog.com/post/2017-05-26-hello-world/"/>
    <id>http://milkblog.com/post/2017-05-26-hello-world/</id>
    <published>2017-05-26T04:12:57.000Z</published>
    <updated>2019-12-09T14:53:59.472Z</updated>
    
    <content type="html"><![CDATA[<p>hello world!</p><a id="more"></a> <p>###This is my blog —-MilkCXB</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;hello world!&lt;/p&gt;
    
    </summary>
    
    
      <category term="web前端" scheme="http://milkblog.com/categories/web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="web前端" scheme="http://milkblog.com/tags/web%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>vuex�ĸ�����������������mapState</title>
    <link href="http://milkblog.com/post/2017-05-26-vuex%E7%9A%84%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E2%80%94mapState/"/>
    <id>http://milkblog.com/post/2017-05-26-vuex%E7%9A%84%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E2%80%94mapState/</id>
    <published>2017-05-26T04:12:57.000Z</published>
    <updated>2019-12-09T14:44:45.854Z</updated>
    
    <content type="html"><![CDATA[<p>������Ҫ����һЩ����vuex��mapState�����������÷�</p><a id="more"></a> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">computed: mapState(&#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">  count: &#39;count&#39;, &#x2F;&#x2F; ��һ��д��</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">  sex: (state) &#x3D;&gt; state.sex, &#x2F;&#x2F; �ڶ���д��</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  from: function (state) &#123; &#x2F;&#x2F; ����ͨ����thisָ��vueʵ��,Ҫע��</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">    return this.str + &#39;:&#39; + state.from</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">  &#x2F;&#x2F; ע�������д����������������ͬ,��ʵ�ϼ�ͷ������thisָ�벢û��ָ��vueʵ��,��˲�Ҫ���ü�ͷ����</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">  &#x2F;&#x2F; from: (state) &#x3D;&gt; this.str + &#39;:&#39; + state.from</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">9</span></pre></td><td class="code"><pre><span class="line">  myCmpted: function () &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">10</span></pre></td><td class="code"><pre><span class="line">    &#x2F;&#x2F; ���ﲻ��Ҫstate,����һ��computed��ԭ���÷�</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">11</span></pre></td><td class="code"><pre><span class="line">    return &#39;����&#39; + this.str</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">12</span></pre></td><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr></table></figure><p>���⣬����һ��</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span></pre></td><td class="code"><pre><span class="line">computed: mapState([</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">2</span></pre></td><td class="code"><pre><span class="line">    &#39;count&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">3</span></pre></td><td class="code"><pre><span class="line">    &#39;count2&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">4</span></pre></td><td class="code"><pre><span class="line">  ]),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">5</span></pre></td><td class="code"><pre><span class="line">computed: &#123;</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">6</span></pre></td><td class="code"><pre><span class="line">      test: &#39;test sss&#39;,</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">7</span></pre></td><td class="code"><pre><span class="line">      ...mapState([&#39;count&#39;, &#39;count2&#39;]),</span></pre></td></tr><tr><td class="gutter"><pre><span class="line">8</span></pre></td><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure><p>������…mapState���÷�</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;������Ҫ����һЩ����vuex��mapState�����������÷�&lt;/p&gt;
    
    </summary>
    
    
      <category term="webǰ��" scheme="http://milkblog.com/categories/webj%EF%BF%BD%EF%BF%BD/"/>
    
    
      <category term="vuex" scheme="http://milkblog.com/tags/vuex/"/>
    
  </entry>
  
</feed>
