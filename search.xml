<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>欢迎各位来到我的博客</title>
    <url>/post/2019-12-09-wo/</url>
    <content><![CDATA[<p>这里是我的博客</p>
<a id="more"></a>

<p>###欢迎来到我的博客</p>
]]></content>
      <categories>
        <category>本人</category>
      </categories>
      <tags>
        <tag>个人心情</tag>
      </tags>
  </entry>
  <entry>
    <title>router里的钩子函数</title>
    <url>/post/2017-05-26-123/</url>
    <content><![CDATA[<p>router里会存在哪些钩子函数呢？</p>
<a id="more"></a> 

<p>##router里会存在哪些钩子函数呢？</p>
<h3 id="Vue-beforeEach-function-to-form-next-在跳转之前执行"><a href="#Vue-beforeEach-function-to-form-next-在跳转之前执行" class="headerlink" title="Vue.beforeEach(function(to,form,next){}) /在跳转之前执行/"></a>Vue.beforeEach(function(to,form,next){}) /<em>在跳转之前执行</em>/</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">router.beforeEach((to, from, next) &#x3D;&gt; &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    let token &#x3D; router.app.$storage.fetch(&quot;token&quot;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    let needAuth &#x3D; to.matched.some(item &#x3D;&gt; item.meta.login);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    if(!token &amp;&amp; needAuth) return next(&#123;path: &quot;&#x2F;login&quot;&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    next();</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr></table></figure>

<p>beforeEach函数有三个参数：<br>####to:router即将进入的路由对象</p>
<p>####from:当前导航即将离开的路由</p>
<p>####next:Function,进行管道中的一个钩子，如果执行完了，则导航的状态就是 confirmed （确认的）；否则为false，终止导航。</p>
<p>####afterEach函数不用传next()函数</p>
<h3 id="Vue-afterEach-function-to-form-在跳转之后判断"><a href="#Vue-afterEach-function-to-form-在跳转之后判断" class="headerlink" title="Vue.afterEach(function(to,form))/在跳转之后判断/"></a>Vue.afterEach(function(to,form))/<em>在跳转之后判断</em>/</h3><p>比bforeEach少个next函数</p>
]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>vue-router</tag>
      </tags>
  </entry>
  <entry>
    <title>j12321412</title>
    <url>/post/2017-05-26-hello-world/</url>
    <content><![CDATA[<p>hello world!</p>
<a id="more"></a> 

<p>###This is my blog —-MilkCXB</p>
]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>web前端</tag>
      </tags>
  </entry>
  <entry>
    <title>vuex的辅助函数—————mapState</title>
    <url>/post/2017-05-26-vuex%E7%9A%84%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0%E2%80%94%E2%80%94%E2%80%94%E2%80%94%E2%80%94mapState/</url>
    <content><![CDATA[<p>这里主要介绍一些关于vuex的mapState辅助函数的用法</p>
<a id="more"></a> 

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">computed: mapState(&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  count: &#39;count&#39;, &#x2F;&#x2F; 第一种写法</span></pre></td></tr><tr><td class="code"><pre><span class="line">  sex: (state) &#x3D;&gt; state.sex, &#x2F;&#x2F; 第二种写法</span></pre></td></tr><tr><td class="code"><pre><span class="line">  from: function (state) &#123; &#x2F;&#x2F; 用普通函数this指向vue实例,要注意</span></pre></td></tr><tr><td class="code"><pre><span class="line">    return this.str + &#39;:&#39; + state.from</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#x2F;&#x2F; 注意下面的写法看起来和上面相同,事实上箭头函数的this指针并没有指向vue实例,因此不要滥用箭头函数</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#x2F;&#x2F; from: (state) &#x3D;&gt; this.str + &#39;:&#39; + state.from</span></pre></td></tr><tr><td class="code"><pre><span class="line">  myCmpted: function () &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#x2F;&#x2F; 这里不需要state,测试一下computed的原有用法</span></pre></td></tr><tr><td class="code"><pre><span class="line">    return &#39;测试&#39; + this.str</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr></table></figure>

<p>另外，还有一种</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">computed: mapState([</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#39;count&#39;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#39;count2&#39;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">  ]),</span></pre></td></tr><tr><td class="code"><pre><span class="line">computed: &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      test: &#39;test sss&#39;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">      ...mapState([&#39;count&#39;, &#39;count2&#39;]),</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr></table></figure>

<p>这种是…mapState的用法</p>
]]></content>
      <categories>
        <category>web前端</category>
      </categories>
      <tags>
        <tag>vuex</tag>
      </tags>
  </entry>
</search>
